{
  "openapi": "3.0.3",
  "info": {
    "title": "Sunrise Sunset - OpenAPI 3.0",
    "description": "We offer a free API that provides sunset and sunrise times for a given latitude and longitude.\n\nPlease note that attribution is required if you use our API. Check \"Usage limits and attribution\" section below for more information.\nNOTE: All times are in UTC and summer time adjustments are not included in the returned data.",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Sunrise-Sunset",
    "url": "https://sunrise-sunset.org/api"
  },
  "servers": [
    {
      "url": "https://api.sunrise-sunset.org"
    }
  ],
  "tags": [
    {
      "name": "json",
      "description": "The result data is formatted using JSON",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://sunrise-sunset.org/api"
      }
    }
  ],
  "paths": {
    "/json": {
      "get": {
        "tags": [
          "json"
        ],
        "summary": "Gets sunrise and senset times in the given location",
        "description": "Gets object of all sun-related times in the given location.",
        "operationId": "getAll",
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude in decimal degrees",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude in decimal degrees",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date in YYYY-MM-DD format. Also accepts other date formats and even relative date formats. If not present, date defaults to current date.",
            "schema": {
              "type": "string",
              "example": "today"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Callback function name for JSONP response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formatted",
            "in": "query",
            "description": "If 0, time values in response will be expressed following ISO 8601 and day_length will be expressed in seconds. Defaults to 1",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "object",
                      "properties": {
                        "sunrise": {
                          "type": "string",
                          "description": "sunrise time in UTC",
                          "example": "7:27:02 AM"
                        },
                        "sunset": {
                          "type": "string",
                          "description": "sunset time in UTC",
                          "example": "5:05:55 PM"
                        },
                        "solar_noon": {
                          "type": "string",
                          "description": "solar noon time in UTC",
                          "example": "12:16:28 PM"
                        },
                        "day_length": {
                          "type": "string",
                          "description": "day length in hh:mm:ss format or number of seconds",
                          "example": "9:38:53"
                        },
                        "civil_twilight_begin": {
                          "type": "string",
                          "description": "beginning time of civil twilight in UTC",
                          "example": "6:58:14 AM"
                        },
                        "civil_twilight_end": {
                          "type": "string",
                          "description": "end time of civil twilight in UTC",
                          "example": "5:34:43 PM"
                        },
                        "nautical_twilight_begin": {
                          "type": "string",
                          "description": "beginning time of nautical twilight in UTC",
                          "example": "6:25:47 AM"
                        },
                        "nautical_twilight_end": {
                          "type": "string",
                          "description": "end time of nautical twilight in UTC",
                          "example": "6:07:10 PM"
                        },
                        "astronomical_twilight_begin": {
                          "type": "string",
                          "description": "beginning time of astronomical twilight in UTC",
                          "example": "5:54:14 AM"
                        },
                        "astronomical_twilight_end": {
                          "type": "string",
                          "description": "end time of astronomical twilight in UTC",
                          "example": "6:38:43 PM"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "status of the request",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "string",
                      "example": ""
                    },
                    "error": {
                      "type": "string",
                      "example": "INVALID_DATE"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
