openapi: 3.0.3
info:
  title: TV Maze - OpenAPI 3.0
  description: |-
    If you want to add TV information to your website or app then you've come to the right place!
    
    We provide a free, fast and clean REST API that's easy to use, returns JSON and conforms to the HATEOAS and HAL principles. The root url is [https://api.tvmaze.com](https://api.tvmaze.com) and the available endpoints are documented below. If you have any questions or suggestions regarding the API, please post them on [our forums](http://www.tvmaze.com/forums/4/api).

    In addition to the free public API, there's a user-level API available for all [Premium](https://www.tvmaze.com/premium) members. The documentation for the user API can be viewed [here](https://static.tvmaze.com/apidoc/).
    
    To stay up to date with the latest changes, you can follow the changelog thread [here](http://www.tvmaze.com/threads/4/api-changelog?page=999).
  termsOfService: https://www.tvmaze.com/site/tos
  contact:
    email: "example@email.com"
  license:
    name: CC BY-SA
    url: http://creativecommons.org/licenses/by-sa/4.0/
  version: 1.0.12
externalDocs:
  description: Find out more about TV Maze
  url: https://www.tvmaze.com
servers:
  - url: https://api.tvmaze.com
tags:
  - name: search
    description: Search for shows or people
    externalDocs:
      description: Find out more
      url: https://www.tvmaze.com/api#search
  - name: schedule
    description: A complete list of episodes that air in a given country on a given date
    externalDocs:
      description: Find out more
      url: https://www.tvmaze.com/api#schedule
  - name: shows
    description: Get information about shows, seasons and episodes
    externalDocs:
      description: Find out more
      url: https://www.tvmaze.com/api#shows
  - name: episodes
    description: Get information about specific episodes
    externalDocs:
      description: Find out more
      url: https://www.tvmaze.com/api#episodes
  - name: people
    description: Get information about people
    externalDocs:
      description: Find out more
      url: https://www.tvmaze.com/api#people
paths:
  /search/shows:
    get:
      tags:
        - search
      summary: Search through all the shows in our database by the show's name
      description: Provide search term to get the results
      operationId: searchShows
      parameters:
        - name: q
          in: query
          description: The term to search show names for.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    score:
                      type: number
                      example: 1.427453
                    show:
                      $ref: '#/components/schemas/Show'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: 'Missing required parameters: q'
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 400
  /singlesearch/shows:
    get:
      tags:
        - search
      summary: Finds single search result
      description: Finds single search result.
      operationId: singlesearch
      parameters:
        - name: q
          in: query
          description: The term to search show names for.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Show'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: 'Missing required parameters: q'
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 400
  /lookup/shows:
    get:
      tags:
        - search
      summary: Find show by tvrage, thetvdb or IMDB ID
      description: Find specific show by tvrage, thetvdb or IMDB ID. At least one ID is required.
      operationId: getShowByExternalId
      parameters:
        - name: tvrage
          in: query
          description: The tvrage id
          schema:
            type: integer
        - name: thetvdb
          in: query
          description: The thetvdb id
          schema:
            type: integer
        - name: imdb
          in: query
          description: The imdb id
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Show'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 400
        '404':
          description: Show not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /search/people:
    get:
      tags:
        - search
      summary: Search through all the people in our database
      description: Provide search term to get the results
      operationId: searchPeople
      parameters:
        - name: q
          in: query
          description: The term to search people names for.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    score:
                      type: number
                      example: 1
                    person:
                      $ref: '#/components/schemas/Person'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: 'Missing required parameters: q'
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 400
  /shows/{id}:
    get:
      tags:
        - shows
      summary: Retrieve all primary information for a given show
      description: Retrieve all primary information for a given show
      operationId: getShowById
      parameters:
        - name: id
          in: path
          description: ID of show to get
          required: true
          schema:
            type: integer
            format: int64
        - name: embed
          in: query
          description: optionally embed other information in the response
          schema:
            type: string
            enum: [episodes, cast, crew]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Show'
        '404':
          description: Show not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /shows/{id}/episodes:
    get:
      tags:
        - shows
      summary: Retrieve a complete list of episodes for the given show
      description: Retrieve a complete list of episodes for the given show
      operationId: getShowEpisodes
      parameters:
        - name: id
          in: path
          description: ID of show to get episodes for
          required: true
          schema:
            type: integer
            format: int64
        - name: specials
          in: query
          description: include both significant and insignificant specials in the list
          schema:
            type: integer
            enum: [0, 1]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Episode'
        '404':
          description: Show not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /shows/{id}/episodebynumber:
    get:
      tags:
        - shows
      summary: Retrieve one episode from a show given season and episode numbers
      description: Retrieve one episode from a show given season and episode numbers
      operationId: getEpisode
      parameters:
        - name: id
          in: path
          description: ID of show the episode belongs to
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: number of the season the episode belongs to
          required: true
          schema:
            type: integer
            format: int32
        - name: number
          in: query
          description: order of the episode within the given season
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Episode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: 'Missing required parameters: season'
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 400
        '404':
          description: Show not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /shows/{id}/episodesbydate:
    get:
      tags:
        - shows
      summary: Retrieve one episode from a show given season and episode numbers
      description: Retrieve one episode from a show given season and episode numbers
      operationId: getEpisodeByDate
      parameters:
        - name: id
          in: path
          description: ID of show the episode belongs to
          required: true
          schema:
            type: integer
            format: int32
        - name: date
          in: query
          description: the date the episode first premiered in ISO 8601 format
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Episode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: 'Missing required parameters: date'
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 400
        '404':
          description: Show or episode not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /shows/{id}/seasons:
    get:
      tags:
        - shows
      summary: Retrieve a complete list of seasons for the given show
      description: Retrieve a complete list of seasons for the given show
      operationId: getShowSeasons
      parameters:
        - name: id
          in: path
          description: ID of show to get seasons for
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Season'
        '404':
          description: Show not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /seasons/{id}/episodes:
    get:
      tags:
        - shows
      summary: Retrieve a list of episodes in this season. Specials are always included in this list
      description: Retrieve a list of episodes in this season. Specials are always included in this list
      operationId: getSeasonEpisodes
      parameters:
        - name: id
          in: path
          description: ID of season to get episodes for
          required: true
          schema:
            type: integer
            format: int64
        - name: embed
          in: query
          description: optionally embed other information in the response
          schema:
            type: string
            enum: [guestcast]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Episode'
        '404':
          description: Season not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /shows/{id}/cast:
    get:
      tags:
        - shows
      summary: Retrieve a list of main cast for a show
      description: Retrieve a list of main cast for a show
      operationId: getShowCast
      parameters:
        - name: id
          in: path
          description: ID of show to get main cast for
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cast'
        '404':
          description: Show not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /shows/{id}/crew:
    get:
      tags:
        - shows
      summary: Retrieve a list of main crew for a show
      description: Retrieve a list of main crew for a show
      operationId: getShowCrew
      parameters:
        - name: id
          in: path
          description: ID of show to get crew for
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      example: Executive Producer
                    person:
                      $ref: '#/components/schemas/Person'
        '404':
          description: Show not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /shows/{id}/akas:
    get:
      tags:
        - shows
      summary: Retrieve a list of AKA's (aliases) for a show
      description: Retrieve a list of AKA's (aliases) for a show
      operationId: getShowAKAs
      parameters:
        - name: id
          in: path
          description: ID of show to get aliases for
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Ходячие мертвецы
                    country:
                      $ref: '#/components/schemas/Country'
        '404':
          description: Show not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /shows/{id}/images:
    get:
      tags:
        - shows
      summary: Retrieve a list of all images available for this show
      description: Retrieve a list of all images available for this show
      operationId: getShowImages
      parameters:
        - name: id
          in: path
          description: ID of show to get aliases for
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
        '404':
          description: Show not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /episodes/{id}:
    get:
      tags:
        - episodes
      summary: Retrieve all primary information for a given episode
      description: Retrieve all primary information for a given episode
      operationId: getEpisodeByID
      parameters:
        - name: id
          in: path
          description: ID of episode to get
          required: true
          schema:
            type: integer
            format: int64
        - name: embed
          in: query
          description: optionally embed other information in the response
          schema:
            type: string
            enum: [show]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Episode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: 'Invalid embed type'
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 400
        '404':
          description: Episode not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /episodes/{id}/guestcast:
    get:
      tags:
        - episodes
      summary: Retrieve all guest cast starring in an episode
      description: Retrieve all guest cast starring in an episode
      operationId: getEpisodeGuestCast
      parameters:
        - name: id
          in: path
          description: ID of episode to get
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cast'
        '404':
          description: Episode not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /episodes/{id}/guestcrew:
    get:
      tags:
        - episodes
      summary: Retrieve all guest cast starring in an episode
      description: Retrieve all guest cast starring in an episode
      operationId: getEpisodeGuestCrew
      parameters:
        - name: id
          in: path
          description: ID of episode to get
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    person:
                      $ref: '#/components/schemas/Person'
                    guestCrewType:
                      type: string
                      example: Director
        '404':
          description: Episode not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /people/{id}:
    get:
      tags:
        - people
      summary: Retrieve all primary information for a given person
      description: Retrieve all primary information for a given person
      operationId: getPersonByID
      parameters:
        - name: id
          in: path
          description: ID of person to get
          required: true
          schema:
            type: integer
            format: int64
        - name: embed
          in: query
          description: optionally embed other information in the response
          schema:
            type: string
            enum: [castcredits]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: 'Invalid embed type'
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 400
        '404':
          description: Person not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /people/{id}/castcredits:
    get:
      tags:
        - people
      summary: Retrieve all (show-level) cast credits for a person
      description: Retrieve all (show-level) cast credits for a person
      operationId: getPersonCastCredits
      parameters:
        - name: id
          in: path
          description: ID of person to get
          required: true
          schema:
            type: integer
            format: int64
        - name: embed
          in: query
          description: optionally embed other information in the response
          schema:
            type: string
            enum: [show]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CastCredit'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: 'Invalid embed type'
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 400
        '404':
          description: Person not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /people/{id}/crewcredits:
    get:
      tags:
        - people
      summary: Retrieve all (show-level) crew credits for a person
      description: Retrieve all (show-level) crew credits for a person
      operationId: getPersonCrewCredits
      parameters:
        - name: id
          in: path
          description: ID of person to get
          required: true
          schema:
            type: integer
            format: int64
        - name: embed
          in: query
          description: optionally embed other information in the response
          schema:
            type: string
            enum: [show]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CrewCredit'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: 'Invalid embed type'
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 400
        '404':
          description: Person not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
  /people/{id}/guestcastcredits:
    get:
      tags:
        - people
      summary: Retrieve all (episode-level) guest cast credits for a person
      description: Retrieve all (episode-level) guest cast credits for a person
      operationId: getPersonGuestCastCredits
      parameters:
        - name: id
          in: path
          description: ID of person to get
          required: true
          schema:
            type: integer
            format: int64
        - name: embed
          in: query
          description: optionally embed other information in the response
          schema:
            type: string
            enum: [episode]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GuestCastCredit'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: 'Invalid embed type'
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 400
        '404':
          description: Person not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: ''
                  code:
                    type: integer
                    example: 0
                  status:
                    type: integer
                    example: 404
components:
  schemas:
    Show:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
          example: 73
        url:
          type: string
          example: https://www.tvmaze.com/shows/73/the-walking-dead
        name:
          type: string
          example: The Walking Dead
        type:
          type: string
          example: Scripted
        language:
          type: string
          example: English
        genres:
          type: array
          items:
            type: string
          example: [Drama, Action, Horror]
        status:
          type: string
          example: Ended
        runtime:
          description: time of day the show typically airs
          type: integer
          example: null
        averageRuntime:
          type: integer
          example: 62
        premiered:
          type: string
          example: 2010-10-31
        ended:
          type: string
          example: 2022-11-20
        officialSite:
          type: string
          example: https://www.amc.com/twdu/the-walking-dead
        schedule:
          type: object
          properties:
            time:
              type: string
              example: ""
            days:
              type: array
              items:
                type: string
              example: ["Sunday"]
        rating:
          type: object
          properties:
            average:
              description: average rating of the show on TV Maze
              type: number
              example: 8
        weight:
          type: integer
          example: 100
        network:
          $ref: "#/components/schemas/Channel"
        webChannel:
          $ref: "#/components/schemas/Channel"
        dvdCountry:
          type: string
          example: null
        externals:
          description: ids of the show from external websites
          type: object
          properties:
            tvrage:
              type: integer
              example: 25056
            thetvdb:
              type: integer
              example: 153021
            imdb:
              type: string
              example: tt1520211
        image:
          type: object
          properties:
            medium:
              type: string
              example: https://static.tvmaze.com/uploads/images/medium_portrait/424/1061900.jpg
            original:
              type: string
              example: https://static.tvmaze.com/uploads/images/original_untouched/424/1061900.jpg
        summary:
          type: string
          example: <p><b>The Walking Dead</b> tells the story of the months and years that follow after a zombie apocalypse. It follows a group of survivors, led by former police officer Rick Grimes, who travel in search of a safe and secure home. As the world overrun by the dead takes its toll on the survivors, their interpersonal conflicts present a greater danger to their continuing survival than the walkers that roam the country. Over time, the characters are changed by the constant exposure to death and some grow willing to do anything to survive.</p><p>Based on the comic book series of the same name by Robert Kirkman, Tony Moore, and Charlie Adlard.</p>
        updated:
          type: integer
          format: int64
          example: 1669133052
        _links:
          type: object
          properties:
            self:
              $ref: "#/components/schemas/showLink"
            previousepisode:
              $ref: "#/components/schemas/episodeLink"
            nextepisode:
              $ref: "#/components/schemas/episodeLink"
        _embedded:
          type: object
          description: additional information related to the show, only appears when the embed parameter is used
          properties:
            episodes:
              description: list of the show's episodes
              type: array
              items:
                $ref: '#/components/schemas/Episode'
            cast:
              description: list of the show's cast members
              type: array
              items:
                $ref: '#/components/schemas/Cast'
            crew:
              description: list of the show's crew members
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    example: Executive Producer
                  person:
                    $ref: '#/components/schemas/Person'
    Person:
      type: object
      required:
        - id
        - name
      properties:
        id:
          description: person id
          type: integer
          format: int32
          example: 46432
        url:
          type: string
          example: https://www.tvmaze.com/people/46432/tom-hanks
        name:
          type: string
          example: Tom Hanks
        country:
          $ref: "#/components/schemas/Country"
        birthday:
          type: string
          example: "1956-07-09"
        deathday:
          description: the day the person died, if any
          type: string
          example: null
        gender:
          type: string
          example: "Male"
        image:
          type: object
          properties:
            medium:
              type: string
              example: https://static.tvmaze.com/uploads/images/medium_portrait/28/72307.jpg
            original:
              type: string
              example: https://static.tvmaze.com/uploads/images/original_untouched/28/72307.jpg
        updated:
          type: integer
          format: int64
          example: 1676425316
        _links:
          type: object
          properties:
            self:
              $ref: "#/components/schemas/personLink"
        _embedded:
          type: object
          properties:
            castcredits:
              type: array
              items:
                $ref: '#/components/schemas/CastCredit'
    Episode:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4095
        url:
          type: string
          example: https://www.tvmaze.com/episodes/4095/the-walking-dead-1x01-days-gone-bye
        name:
          type: string
          example: Days Gone Bye
        season:
          type: integer
          example: 1
        number:
          type: integer
          example: 1
        type:
          type: string
          example: regular
        airdate:
          type: string
          example: 2010-10-31
        airtime:
          type: string
          example: 22:00
        airstamp:
          type: string
          example: 2010-11-01T02:00:00+00:00
        runtime:
          type: integer
          example: 60
        rating:
          type: object
          properties:
            average:
              type: number
              example: 9.1
        image:
          type: object
          properties:
            medium:
              type: string
              example: https://static.tvmaze.com/uploads/images/medium_landscape/0/2104.jpg
            original:
              type: string
              example: https://static.tvmaze.com/uploads/images/original_untouched/0/2104.jpg
        summary:
          type: string
          example: <p>Rick searches for his family after emerging from a coma into a world terrorized by the walking dead. Morgan and Duane, whom he meets along the way, help teach Rick the new rules for survival.</p>
        _links:
          type: object
          properties:
            self:
              $ref: "#/components/schemas/episodeLink"
            show:
              $ref: "#/components/schemas/showLink"
        _embedded:
          $ref: "#/components/schemas/Show"
    Season:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 263
        url:
          type: string
          example: https://www.tvmaze.com/seasons/263/the-walking-dead-season-1
        number:
          type: integer
          example: 1
        name:
          type: string
          example: ''
        episodeOrder:
          type: integer
          example: 6
        premiereDate:
          type: string
          example: 2010-10-31
        endDate:
          type: string
          example: 2010-12-05
        network:
          $ref: "#/components/schemas/Channel"
        webChannel:
          $ref: "#/components/schemas/Channel"
        image:
          type: object
          properties:
            medium:
              type: string
              example: https://static.tvmaze.com/uploads/images/medium_portrait/24/61350.jpg
            original:
              type: string
              example: https://static.tvmaze.com/uploads/images/original_untouched/24/61350.jpg
        summary:
          type: string
          example: <p>Deputy Rick Grimes wakes up from a coma in an abandoned hospital after surviving a shooting. Outside the hospital the world is a nightmare, the dead have re-animated. Walkers, as they're called, are everywhere. After meeting a man and his son, Rick learns that his wife and son (Lori and Carl) may have fled to Atlanta, where the Center for Disease Control has set up a quarantine zone. He arms himself and sets out for the city.</p><p>Rick's best friend has helped Lori and Carl survive, and they are living just outside of Atlanta in a makeshift camp for a handful of survivors. Rick arrives in Atlanta to find it completely overrun by walkers. He's rescued by people from the camp and reunited with Lori, Carl, and Shane. Rick assumes control of the group and following an attack by a horde of walkers, they flee for the CDC.</p><p>At the CDC, they find one surviving doctor. He knows a bit about the pathology of the virus, but has no cure. Before long the CDC building activates safety protocols as it runs out of fuel. Rick's group barely manages to escape before the building incinerates.</p>
        _links:
          type: object
          properties:
            self:
              $ref: "#/components/schemas/seasonLink"
    Character:
      type: object
      properties:
        id:
          type: integer
          example: 10764
        url:
          type: string
          example: https://www.tvmaze.com/characters/10764/the-walking-dead-daryl-dixon
        name:
          type: string
          example: Daryl Dixon
        image:
          type: object
          properties:
            medium:
              type: string
              example: https://static.tvmaze.com/uploads/images/medium_portrait/166/417474.jpg
            original:
              type: string
              example: https://static.tvmaze.com/uploads/images/original_untouched/166/417474.jpg
        _links:
          type: object
          properties:
            self:
              $ref: "#/components/schemas/characterLink"
        self:
          type: boolean
          description: whether the cast is appearing as him/herself
          example: false
        voice:
          type: boolean
          description: whether the cast member is a voice actor/actress in this show
          example: false
    Cast:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/Person'
        character:
          $ref: '#/components/schemas/Character'
    Image:
      type: object
      properties:
        id:
          type: integer
          example: 509
        type:
          type: string
          example: poster
        main:
          type: boolean
          example: false
        resolutions:
          type: object
          properties:
            original:
              type: object
              properties:
                url:
                  type: string
                  example: https://static.tvmaze.com/uploads/images/original_untouched/0/509.jpg
                width:
                  type: integer
                  example: 680
                height:
                  type: integer
                  example: 1000
            medium:
              type: object
              properties:
                url:
                  type: string
                  example: https://static.tvmaze.com/uploads/images/medium_portrait/0/509.jpg
                width:
                  type: integer
                  example: 210
                height:
                  type: integer
                  example: 295
    CastCredit:
      type: object
      properties:
        self:
          type: boolean
          description: whether the person appeared as him/herself
          example: false
        voice:
          type: boolean
          description: whether the person appeared as voice actor/actress
          example: false
        _links":
          type: object
          properties:
            show:
              $ref: '#/components/schemas/showLink'
            character:
              $ref: '#/components/schemas/characterLink'
        _embedded:
          $ref: "#/components/schemas/Show"
    GuestCastCredit:
      type: object
      properties:
        self:
          type: boolean
          description: whether the person appeared as him/herself
          example: false
        voice:
          type: boolean
          description: whether the person appeared as voice actor/actress
          example: false
        _links":
          type: object
          properties:
            episode:
              $ref: '#/components/schemas/episodeLink'
            character:
              $ref: '#/components/schemas/characterLink'
        _embedded:
          $ref: "#/components/schemas/Episode"
    CrewCredit:
      type: object
      properties:
        type:
          type: string
          example: Executive Producer
        _links":
          type: object
          properties:
            show:
              $ref: '#/components/schemas/showLink'
        _embedded:
          $ref: "#/components/schemas/Show"
    Country:
      type: object
      properties:
        name:
          type: string
          example: United States
        code:
          type: string
          example: US
        timezone:
          type: string
          example: America/New_York
    Channel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 453
        name:
          type: string
          example: AMC+
        country:
          $ref: "#/components/schemas/Country"
        officialSite:
          type: string
          example: null
    showLink:
      type: object
      properties:
        href:
          type: string
          example: https://api.tvmaze.com/shows/73
    episodeLink:
      type: object
      properties:
        href:
          type: string
          example: https://api.tvmaze.com/episodes/2408243
    personLink:
      type: object
      properties:
        href:
          type: string
          example: https://api.tvmaze.com/people/46432
    seasonLink:
      type: object
      properties:
        href:
          type: string
          example: https://api.tvmaze.com/seasons/263
    characterLink:
      type: object
      properties:
        href:
          type: string
          example: https://api.tvmaze.com/characters/10764
