openapi: 3.0.1
info:
  title: Statutory Instruments API
  description: >-
    An API exposing details of the various types of Statutory Instruments laid before Parliament.
  contact:
    name: UK Parliament
    url: https://www.parliament.uk
    email: softwareengineering@parliament.uk
  version: v1
servers:
  - url: https://statutoryinstruments-api.parliament.uk
paths:
  /api/v1/BusinessItem/{id}:
    get:
      tags:
        - BusinessItem
      summary: Returns business item by ID.
      operationId: GetBusinessItemById
      parameters:
        - name: id
          in: path
          description: Business item with the ID specified
          required: true
          schema:
            type: string
        - name: LaidPaper
          in: query
          description: Business item by laid paper type
          schema:
            $ref: '#/components/schemas/LaidPaperType'
      responses:
        '200':
          description: The requested business item
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BusinessItemResource'
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessItemResource'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessItemResource'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: If the item doesn't exist
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/LayingBody:
    get:
      tags:
        - LayingBody
      summary: Returns all laying bodies.
      operationId: GetLayingBodies
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LayingBodyResourceCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/LayingBodyResourceCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/LayingBodyResourceCollection'
  /api/v1/Procedure:
    get:
      tags:
        - Procedure
      summary: Returns all procedures.
      operationId: GetProceduresV1
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProcedureResourceCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/ProcedureResourceCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/ProcedureResourceCollection'
  /api/v1/Procedure/{id}:
    get:
      tags:
        - Procedure
      summary: Returns procedure by ID.
      operationId: GetProceduresByIdV1
      parameters:
        - name: id
          in: path
          description: Procedure with the ID specified
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProcedureDetailsResource'
            application/json:
              schema:
                $ref: '#/components/schemas/ProcedureDetailsResource'
            text/json:
              schema:
                $ref: '#/components/schemas/ProcedureDetailsResource'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/ProposedNegativeStatutoryInstrument:
    get:
      tags:
        - ProposedNegativeStatutoryInstrument
      summary: Returns a list of proposed negative statutory instruments.
      operationId: GetProposedNegativeStatutoryInstruments
      parameters:
        - name: Name
          in: query
          description: Proposed negative statutory instruments with the name provided
          schema:
            type: string
        - name: RecommendedForProcedureChange
          in: query
          description: >-
            Proposed negative statutory instruments recommended for procedure
            change
          schema:
            type: boolean
        - name: DepartmentId
          in: query
          description: >-
            Proposed negative statutory instruments with the department ID
            specified
          schema:
            maximum: 2147483647
            minimum: 1
            type: integer
            format: int32
        - name: LayingBodyId
          in: query
          description: >-
            Proposed negative statutory instruments with the laying body ID
            specified
          schema:
            pattern: ^[a-zA-Z0-9]{8}$
            type: string
        - name: Skip
          in: query
          description: The number of records to skip from the first, default is 0
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
        - name: Take
          in: query
          description: The number of records to return, default is 20
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/ProposedNegativeStatutoryInstrumentResourceCollection
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProposedNegativeStatutoryInstrumentResourceCollection
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ProposedNegativeStatutoryInstrumentResourceCollection
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/ProposedNegativeStatutoryInstrument/{id}:
    get:
      tags:
        - ProposedNegativeStatutoryInstrument
      summary: Returns proposed negative statutory instrument by ID.
      operationId: GetProposedNegativeStatutoryInstrumentById
      parameters:
        - name: id
          in: path
          description: Proposed negative statutory instrument with the ID specified
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/ProposedNegativeStatutoryInstrumentResource
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProposedNegativeStatutoryInstrumentResource
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ProposedNegativeStatutoryInstrumentResource
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/ProposedNegativeStatutoryInstrument/{id}/BusinessItems:
    get:
      tags:
        - ProposedNegativeStatutoryInstrument
      summary: >-
        Returns business items belonging to a proposed negative statutory
        instrument.
      operationId: GetBusinessItemsByProposedNegativeStatutoryInstrumentId
      parameters:
        - name: id
          in: path
          description: >-
            Business items belonging to proposed negative statutory instrument
            with the ID specified
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BusinessItemResourceCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessItemResourceCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessItemResourceCollection'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/StatutoryInstrument:
    get:
      tags:
        - StatutoryInstrument
      summary: Returns a list of statutory instruments.
      operationId: GetStatutoryInstruments
      parameters:
        - name: Name
          in: query
          description: Statutory instruments with the name specified
          schema:
            type: string
        - name: StatutoryInstrumentType
          in: query
          description: >-
            Statutory instruments where the statutory instrument type is the
            type provided
          schema:
            $ref: '#/components/schemas/StatutoryInstrumentType'
        - name: ScheduledDebate
          in: query
          description: Statutory instrument which contains a scheduled debate
          schema:
            type: boolean
        - name: MotionToStop
          in: query
          description: Statutory instruments which contains a motion to stop
          schema:
            type: boolean
        - name: ConcernsRaisedByCommittee
          in: query
          description: Statutory instruments which contains concerns raised by committee
          schema:
            type: boolean
        - name: ParliamentaryProcessConcluded
          in: query
          description: >-
            Statutory instruments where the parliamentary process is concluded
            or notconcluded
          schema:
            $ref: '#/components/schemas/ParliamentaryProcess'
        - name: DepartmentId
          in: query
          description: Statutory instruments with the department ID specified
          schema:
            maximum: 2147483647
            minimum: 1
            type: integer
            format: int32
        - name: LayingBodyId
          in: query
          description: Statutory instruments with the laying body ID specified
          schema:
            pattern: ^[a-zA-Z0-9]{8}$
            type: string
        - name: House
          in: query
          description: Statutory instruments laid in the house specified
          schema:
            $ref: '#/components/schemas/House'
        - name: Skip
          in: query
          description: The number of records to skip from the first, default is 0
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
        - name: Take
          in: query
          description: The number of records to return, default is 20
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StatutoryInstrumentResourceCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/StatutoryInstrumentResourceCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/StatutoryInstrumentResourceCollection'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/StatutoryInstrument/{id}:
    get:
      tags:
        - StatutoryInstrument
      summary: Returns a statutory instrument by ID.
      operationId: GetStatutoryInstrumentById
      parameters:
        - name: id
          in: path
          description: Statutory instrument with the ID specified
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StatutoryInstrumentResource'
            application/json:
              schema:
                $ref: '#/components/schemas/StatutoryInstrumentResource'
            text/json:
              schema:
                $ref: '#/components/schemas/StatutoryInstrumentResource'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/StatutoryInstrument/{id}/BusinessItems:
    get:
      tags:
        - StatutoryInstrument
      summary: Returns business items belonging to statutory instrument with ID.
      operationId: GetBusinessItemsByStatutoryInstrumentId
      parameters:
        - name: id
          in: path
          description: >-
            Business items belonging to statutory instrument with the ID
            specified
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BusinessItemResourceCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessItemResourceCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessItemResourceCollection'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    BusinessItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        statutoryInstrumentId:
          type: string
          nullable: true
        stepName:
          type: string
          nullable: true
        itemDate:
          type: string
          format: date-time
          nullable: true
        houses:
          type: array
          items:
            $ref: '#/components/schemas/BusinessItemHouse'
          nullable: true
        link:
          type: string
          nullable: true
        laidPaperType:
          $ref: '#/components/schemas/LaidPaperType'
        sequence:
          type: integer
          format: int32
        statutoryInstrumentUri:
          type: string
          format: uri
          nullable: true
        businessItemUri:
          type: string
          format: uri
          nullable: true
        houseUri:
          type: string
          format: uri
          nullable: true
        houseName:
          type: string
          nullable: true
        procedureStepUri:
          type: string
          format: uri
          nullable: true
        workpackageProcedureUri:
          type: string
          format: uri
          nullable: true
        houseId:
          type: string
          nullable: true
        procedureStepId:
          type: string
          nullable: true
      additionalProperties: false
    BusinessItemHouse:
      type: object
      properties:
        house:
          $ref: '#/components/schemas/House'
        name:
          type: string
          nullable: true
      additionalProperties: false
    BusinessItemResource:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/BusinessItem'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      additionalProperties: false
    BusinessItemResourceCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/BusinessItemResource'
          nullable: true
        totalResults:
          type: integer
          format: int32
        itemsPerPage:
          type: integer
          format: int32
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      additionalProperties: false
    Department:
      type: object
      properties:
        departmentId:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
      additionalProperties: false
    House:
      enum:
        - Commons
        - Lords
      type: string
    LaidPaperSummary:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    LaidPaperType:
      enum:
        - StatutoryInstrument
        - ProposedNegative
      type: string
    LayingBody:
      type: object
      properties:
        departmentId:
          type: integer
          format: int32
          nullable: true
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    LayingBodyResource:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/LayingBody'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      additionalProperties: false
    LayingBodyResourceCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/LayingBodyResource'
          nullable: true
        totalResults:
          type: integer
          format: int32
        itemsPerPage:
          type: integer
          format: int32
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      additionalProperties: false
    Link:
      type: object
      properties:
        rel:
          type: string
          nullable: true
        href:
          type: string
          nullable: true
        method:
          type: string
          nullable: true
      additionalProperties: false
    ParliamentaryProcess:
      enum:
        - NotConcluded
        - Concluded
      type: string
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    Procedure:
      type: object
      properties:
        id:
          type: string
          nullable: true
        uri:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    ProcedureDetails:
      type: object
      properties:
        id:
          type: string
          nullable: true
        uri:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    ProcedureDetailsResource:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/ProcedureDetails'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      additionalProperties: false
    ProcedureResource:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/Procedure'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      additionalProperties: false
    ProcedureResourceCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProcedureResource'
          nullable: true
        totalResults:
          type: integer
          format: int32
        itemsPerPage:
          type: integer
          format: int32
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      additionalProperties: false
    ProposedNegativeStatutoryInstrument:
      type: object
      properties:
        id:
          type: string
          nullable: true
        commonsLayingDate:
          type: string
          format: date-time
          nullable: true
        commonsPublishedDate:
          type: string
          format: date-time
          nullable: true
        lordsLayingDate:
          type: string
          format: date-time
          nullable: true
        lordsPublishedDate:
          type: string
          format: date-time
          nullable: true
        uri:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        departmentId:
          type: integer
          format: int32
          nullable: true
        layingBodyId:
          type: string
          nullable: true
        layingBodyName:
          type: string
          nullable: true
        procedureUri:
          type: string
          nullable: true
        procedureName:
          type: string
          nullable: true
        procedure:
          $ref: '#/components/schemas/Procedure'
        layingBodyDepartment:
          $ref: '#/components/schemas/Department'
        link:
          type: string
          nullable: true
        statutoryInstrumentPaperId:
          type: string
          nullable: true
        statutoryInstrumentPaperName:
          type: string
          nullable: true
        statutoryInstrument:
          $ref: '#/components/schemas/LaidPaperSummary'
      additionalProperties: false
    ProposedNegativeStatutoryInstrumentResource:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/ProposedNegativeStatutoryInstrument'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      additionalProperties: false
    ProposedNegativeStatutoryInstrumentResourceCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProposedNegativeStatutoryInstrumentResource'
          nullable: true
        totalResults:
          type: integer
          format: int32
        itemsPerPage:
          type: integer
          format: int32
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      additionalProperties: false
    StatutoryInstrument:
      type: object
      properties:
        id:
          type: string
          nullable: true
        commonsLayingDate:
          type: string
          format: date-time
          nullable: true
        commonsPublishedDate:
          type: string
          format: date-time
          nullable: true
        lordsLayingDate:
          type: string
          format: date-time
          nullable: true
        lordsPublishedDate:
          type: string
          format: date-time
          nullable: true
        uri:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        departmentId:
          type: integer
          format: int32
          nullable: true
        layingBodyId:
          type: string
          nullable: true
        layingBodyName:
          type: string
          nullable: true
        procedureUri:
          type: string
          nullable: true
        procedureName:
          type: string
          nullable: true
        procedure:
          $ref: '#/components/schemas/Procedure'
        layingBodyDepartment:
          $ref: '#/components/schemas/Department'
        link:
          type: string
          nullable: true
        paperNumber:
          type: integer
          format: int32
          nullable: true
        paperYear:
          type: string
          nullable: true
        paperPrefix:
          type: string
          nullable: true
        paperMadeDate:
          type: string
          format: date-time
        paperComingIntoForceDate:
          type: string
          format: date-time
          nullable: true
        paperComingIntoForceNote:
          type: string
          nullable: true
        proposedNegativeStatutoryInstrumentPaperId:
          type: string
          nullable: true
        proposedNegativeStatutoryInstrumentPaperName:
          type: string
          nullable: true
        proposedNegativeStatutoryInstrument:
          $ref: '#/components/schemas/LaidPaperSummary'
      additionalProperties: false
    StatutoryInstrumentResource:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/StatutoryInstrument'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      additionalProperties: false
    StatutoryInstrumentResourceCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/StatutoryInstrumentResource'
          nullable: true
        totalResults:
          type: integer
          format: int32
        itemsPerPage:
          type: integer
          format: int32
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      additionalProperties: false
    StatutoryInstrumentType:
      enum:
        - DraftAffirmative
        - DraftNegative
        - MadeAffirmative
        - MadeNegative
      type: string
